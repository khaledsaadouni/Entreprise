// <auto-generated />
using System;
using Entreprise.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Entreprise.Migrations
{
    [DbContext(typeof(ProjectContext))]
    [Migration("20221215222536_inita")]
    partial class inita
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "7.0.1");

            modelBuilder.Entity("Entreprise.Models.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Category");
                });

            modelBuilder.Entity("Entreprise.Models.Department", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("HODId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("HODId");

                    b.ToTable("Department");
                });

            modelBuilder.Entity("Entreprise.Models.Hod", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Email")
                        .HasColumnType("TEXT");

                    b.Property<string>("Firstname")
                        .HasColumnType("TEXT");

                    b.Property<string>("Function")
                        .HasColumnType("TEXT");

                    b.Property<string>("Lastname")
                        .HasColumnType("TEXT");

                    b.Property<string>("Password")
                        .HasColumnType("TEXT");

                    b.Property<int>("Phone_Number")
                        .HasColumnType("INTEGER");

                    b.Property<string>("ROLE")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Hod");
                });

            modelBuilder.Entity("Entreprise.Models.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<float>("Bought_Price")
                        .HasColumnType("REAL");

                    b.Property<int?>("CategoryId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Description")
                        .HasColumnType("TEXT");

                    b.Property<int>("Left")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<int>("Reference")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Sold")
                        .HasColumnType("INTEGER");

                    b.Property<float>("Sold_Price")
                        .HasColumnType("REAL");

                    b.Property<int?>("StockId")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("VendorId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.HasIndex("StockId");

                    b.HasIndex("VendorId");

                    b.ToTable("Product");
                });

            modelBuilder.Entity("Entreprise.Models.Stock", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Stock");
                });

            modelBuilder.Entity("Entreprise.Models.Tasks", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Content")
                        .HasColumnType("TEXT");

                    b.Property<int?>("HODId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Object")
                        .HasColumnType("TEXT");

                    b.Property<string>("Status")
                        .HasColumnType("TEXT");

                    b.Property<int?>("UserId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("HODId");

                    b.HasIndex("UserId");

                    b.ToTable("Task");
                });

            modelBuilder.Entity("Entreprise.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("DepartmentId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Email")
                        .HasColumnType("TEXT");

                    b.Property<string>("Firstname")
                        .HasColumnType("TEXT");

                    b.Property<string>("Function")
                        .HasColumnType("TEXT");

                    b.Property<string>("Lastname")
                        .HasColumnType("TEXT");

                    b.Property<string>("Password")
                        .HasColumnType("TEXT");

                    b.Property<int>("Phone_Number")
                        .HasColumnType("INTEGER");

                    b.Property<string>("ROLE")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("DepartmentId");

                    b.ToTable("User");
                });

            modelBuilder.Entity("Entreprise.Models.Vendor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Email")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<int>("Phone_Number")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("Vendor");
                });

            modelBuilder.Entity("Entreprise.Models.Department", b =>
                {
                    b.HasOne("Entreprise.Models.Hod", "HOD")
                        .WithMany()
                        .HasForeignKey("HODId");

                    b.Navigation("HOD");
                });

            modelBuilder.Entity("Entreprise.Models.Product", b =>
                {
                    b.HasOne("Entreprise.Models.Category", "Category")
                        .WithMany("Products")
                        .HasForeignKey("CategoryId");

                    b.HasOne("Entreprise.Models.Stock", "Stock")
                        .WithMany("Products")
                        .HasForeignKey("StockId");

                    b.HasOne("Entreprise.Models.Vendor", "Vendor")
                        .WithMany("Products")
                        .HasForeignKey("VendorId");

                    b.Navigation("Category");

                    b.Navigation("Stock");

                    b.Navigation("Vendor");
                });

            modelBuilder.Entity("Entreprise.Models.Tasks", b =>
                {
                    b.HasOne("Entreprise.Models.Hod", "HOD")
                        .WithMany("TasksHOD")
                        .HasForeignKey("HODId");

                    b.HasOne("Entreprise.Models.User", "User")
                        .WithMany("Tasks")
                        .HasForeignKey("UserId");

                    b.Navigation("HOD");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Entreprise.Models.User", b =>
                {
                    b.HasOne("Entreprise.Models.Department", "Department")
                        .WithMany("Users")
                        .HasForeignKey("DepartmentId");

                    b.Navigation("Department");
                });

            modelBuilder.Entity("Entreprise.Models.Category", b =>
                {
                    b.Navigation("Products");
                });

            modelBuilder.Entity("Entreprise.Models.Department", b =>
                {
                    b.Navigation("Users");
                });

            modelBuilder.Entity("Entreprise.Models.Hod", b =>
                {
                    b.Navigation("TasksHOD");
                });

            modelBuilder.Entity("Entreprise.Models.Stock", b =>
                {
                    b.Navigation("Products");
                });

            modelBuilder.Entity("Entreprise.Models.User", b =>
                {
                    b.Navigation("Tasks");
                });

            modelBuilder.Entity("Entreprise.Models.Vendor", b =>
                {
                    b.Navigation("Products");
                });
#pragma warning restore 612, 618
        }
    }
}
